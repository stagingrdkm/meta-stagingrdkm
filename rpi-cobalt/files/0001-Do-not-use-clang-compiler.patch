From 64c008a1d27c4dd5a328713b44309c24549e89e1 Mon Sep 17 00:00:00 2001
From: Damian Wrobel <dwrobel@ertelnet.rybnik.pl>
Date: Thu, 18 Jul 2019 10:07:26 +0200
Subject: [PATCH] Do not use clang compiler

Avoid using google's binary bloatware,
two years old 2017 version of clang,
which unconditionally pollutes $HOME directory.

Avoids the following compilation issue:

FAILED: protoc
bash -c "/home/dwrobel1/starboard-toolchains/x86_64-linux-gnu-clang-chromium-298539-1/llvm-build/Release+Asserts/bin/clang++ -target i386-unknown-linux-gnu -pthread -o protoc -Wl,-rpath=\$ORIGIN/lib -Wl,--start-
group obj.host/third_party/protobuf/src/google/protobuf/compiler/protoc.main.o obj.host/third_party/protobuf/libprotoc_lib obj.host/third_party/protobuf/libprotobuf_full_do_not_use  -Wl,--end-group "
/usr/bin/ld: skipping incompatible /opt/rh/devtoolset-6/root/usr/lib/gcc/x86_64-redhat-linux/6.3.1/libstdc++_nonshared.a when searching for -lstdc++_nonshared
/usr/bin/ld: cannot find -lstdc++_nonshared

Signed-off-by: Damian Wrobel <dwrobel@ertelnet.rybnik.pl>

---
 src/build/common.gypi                       |  2 +-
 src/starboard/build/base_configuration.gypi |  2 +-
 src/starboard/tools/build.py                | 15 +++++----------
 src/v8/gypfiles/toolchain.gypi              |  3 ---
 4 files changed, 7 insertions(+), 15 deletions(-)

diff --git a/src/build/common.gypi b/src/build/common.gypi
index 7078e81..7f79c20 100644
--- a/src/build/common.gypi
+++ b/src/build/common.gypi
@@ -113,7 +113,7 @@
     'msvs_debug_link_incremental%': '2',
 
     # Clang stuff.
-    'clang%': '<(clang)',
+    'clang%': '0',
     'make_clang_dir%': 'third_party/llvm-build/Release+Asserts',
 
     # These two variables can be set in GYP_DEFINES while running
diff --git a/src/starboard/build/base_configuration.gypi b/src/starboard/build/base_configuration.gypi
index a1c2a1d..0566726 100644
--- a/src/starboard/build/base_configuration.gypi
+++ b/src/starboard/build/base_configuration.gypi
@@ -177,7 +177,7 @@
               '--std=gnu++11',
             ],
             'linker_flags_host%': [
-              '-target', 'i386-unknown-linux-gnu',
+              '-m32',
               '-pthread',
             ],
           }, {
diff --git a/src/starboard/tools/build.py b/src/starboard/tools/build.py
index 173cd73..077e98c 100644
--- a/src/starboard/tools/build.py
+++ b/src/starboard/tools/build.py
@@ -247,15 +247,10 @@ def FindAndInitGoma():
 def GetHostCompilerEnvironment(clang_spec, goma_supports_compiler=False):
   """Return the host compiler toolchain environment."""
 
-  toolchain_dir = EnsureClangAvailable(clang_spec)
-  toolchain_bin_dir = os.path.join(toolchain_dir, 'bin')
-
-  cc_clang = os.path.join(toolchain_bin_dir, 'clang')
-  cxx_clang = os.path.join(toolchain_bin_dir, 'clang++')
   host_clang_environment = {
-      'CC_host': cc_clang,
-      'CXX_host': cxx_clang,
-      'LD_host': cxx_clang,
+      'CC_host': 'gcc',
+      'CXX_host': 'g++',
+      'LD_host': 'g++',
       'ARFLAGS_host': 'rcs',
       'ARTHINFLAGS_host': 'rcsT',
   }
@@ -263,8 +258,8 @@ def GetHostCompilerEnvironment(clang_spec, goma_supports_compiler=False):
   if goma_supports_compiler and FindAndInitGoma():
     logging.info('Using Goma')
     host_clang_environment.update({
-        'CC_host': 'gomacc ' + cc_clang,
-        'CXX_host': 'gomacc ' + cxx_clang,
+        'CC_host': 'gomacc ' + 'gcc',
+        'CXX_host': 'gomacc ' + 'g++',
     })
   return host_clang_environment
 
diff --git a/src/v8/gypfiles/toolchain.gypi b/src/v8/gypfiles/toolchain.gypi
index fce4d07..53e32d2 100644
--- a/src/v8/gypfiles/toolchain.gypi
+++ b/src/v8/gypfiles/toolchain.gypi
@@ -159,9 +159,6 @@
   ],
   'target_defaults': {
     'ldflags_host': [
-      # mksnapshot can not be compiled on host machine with default clang
-      # linker.
-      '-fuse-ld=lld',
     ],
     'conditions': [
       ['v8_target_arch=="arm"', {
-- 
2.9.5

